{
	"info": {
		"_postman_id": "8e4ceecb-6465-4ad1-9500-1e63243d86e2",
		"name": "API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45749026",
		"_collection_link": "https://strahinjaspasojevic.postman.co/workspace/Strahinja-Spasojevic's-Workspac~05730c5c-df51-457a-8a93-2e4ae55fbac9/collection/45749026-8e4ceecb-6465-4ad1-9500-1e63243d86e2?action=share&source=collection_link&creator=45749026"
	},
	"item": [
		{
			"name": "Get users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () \r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Test response properties\", function () {\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.page).to.eql(1);\r",
							"    pm.expect(responseBody.per_page).to.eql(6);\r",
							"    pm.expect(responseBody.total).to.eql(12);\r",
							"    pm.expect(responseBody.total_pages).to.eql(2);\r",
							"    responseBody.data.forEach(function(user, index) {\r",
							"        pm.expect(user).to.have.property(\"id\");\r",
							"        pm.expect(user).to.have.property(\"email\");\r",
							"        pm.expect(user).to.have.property(\"first_name\");\r",
							"        pm.expect(user).to.have.property(\"last_name\");\r",
							"        pm.expect(user).to.have.property(\"avatar\");\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseBody = pm.response.json();\r",
							"pm.collectionVariables.set(\"new_user_id\", responseBody.id);\r",
							"pm.test(\"Status code is 201\", function () \r",
							"{\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Test response properties\", function () {\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property(\"name\");\r",
							"    pm.expect(responseBody).to.have.property(\"job\");\r",
							"    pm.expect(responseBody).to.have.property(\"id\");\r",
							"    pm.expect(responseBody).to.have.property(\"createdAt\");\r",
							"    pm.expect(responseBody.name).to.eql(\"Pera\");\r",
							"    pm.expect(responseBody.job).to.eql(\"QA\");\r",
							"    \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"job\": \"QA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () \r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Test response properties\", function () {\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property(\"name\");\r",
							"    pm.expect(responseBody).to.have.property(\"job\");\r",
							"    pm.expect(responseBody).to.have.property(\"updatedAt\");\r",
							"    pm.expect(responseBody.name).to.eql(\"Pera2\");\r",
							"    pm.expect(responseBody.job).to.eql(\"QA2\");\r",
							"    \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Pera2\",\r\n    \"job\": \"QA2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/{{new_user_id}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"{{new_user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () \r",
							"{\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://reqres.in/api/users/{{new_user_id}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"{{new_user_id}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "new_user_id",
			"value": ""
		}
	]
}